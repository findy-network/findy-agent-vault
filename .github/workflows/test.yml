name: test
on: push
env:
  FAV_DB_PASSWORD: password
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: setup go, lint and scan
        uses: findy-network/setup-go-action@master
        with:
          linter-config-path: .golangci.yml
      - name: test and measure coverage
        run: make test_cov_out
      - name: store coverage file
        uses: actions/upload-artifact@v3
        with:
          name: ${{ github.sha }}-coverage.txt
          path: ./coverage.txt
          retention-days: 1
    services:
      postgres:
        image: postgres:13.8-alpine
        ports:
          - 5433:5432
        env:
          POSTGRES_PASSWORD: password
          POSTGRES_DB: vault

  e2e:
    runs-on: ubuntu-latest
    steps:
      - name: test e2e flow
        uses: findy-network/e2e-test-action@add-db-wait-script 
        with:
          service: "vault"
      - uses: actions/setup-go@v3
        with:
          go-version-file: './go.mod'
      - name: convert coverage to txt
        run: go tool covdata textfmt -i=coverage -o coverage-e2e.txt
      - name: store coverage file
        uses: actions/upload-artifact@v3
        with:
          name: ${{ github.sha }}-coverage-e2e.txt
          path: ./coverage-e2e.txt
          retention-days: 1

  upload-coverage:
    runs-on: ubuntu-latest
    needs: [test, e2e]
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: download coverage file
        uses: actions/download-artifact@v3
        with:
          name: ${{ github.sha }}-coverage.txt
      - name: download coverage file
        uses: actions/download-artifact@v3
        with:
          name: ${{ github.sha }}-coverage-e2e.txt
      - name: download coverage file
        uses: actions/download-artifact@v3
        with:
          name: ${{ github.sha }}-coverage-e2e.txt
      - name: upload coverage
        uses: codecov/codecov-action@v3
        with:
          files: ./coverage.txt,./coverage-e2e.txt
          fail_ci_if_error: true
